import{_ as c,p as o,q as a,R as e,t}from"./framework-204010b2.js";const r={},s=e("h1",{id:"闭包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#闭包","aria-hidden":"true"},"#"),t(" 闭包")],-1),n=e("p",null,[t("闭包 "),e("code",null,"closure"),t(" 是一个函数以及其捆绑的周边环境状态（lexical environment，词法环境）的引用的组合。换而言之，闭包让开发者可以从内部函数访问外部函数的作用域。在 JavaScript 中，闭包会随着函数的创建而被同时创建。")],-1),l=[s,n];function _(d,i){return o(),a("div",null,l)}const u=c(r,[["render",_],["__file","closure.html.vue"]]);export{u as default};
